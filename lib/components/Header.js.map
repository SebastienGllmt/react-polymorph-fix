{"version":3,"sources":["../../source/components/Header.js"],"names":["HeaderBase","props","context","themeId","theme","themeOverrides","state","composedTheme","ROOT_THEME_API","nextProps","setState","bind","children","className","skin","styleProps","HeaderSkin","skins","IDENTIFIERS","HEADER","reducedTheme","_assembleHeaderTheme","inlineStyles","_assembleInlineStyles","Component","displayName","defaultProps","center","lowerCase","left","right","upperCase","textAlign","textTransform","Object","keys","activeClasses","_getActiveClasses","reduce","activeClass","hasOwnProperty","call","_getActiveFont","light","medium","regular","thin","bold","fontProps","_getActiveTheme","h1","h2","h3","h4","themeProps","activeTheme","activeFont","filter","val","Header"],"mappings":"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","file":"Header.js","sourcesContent":["// @flow\nimport React, { Component } from 'react';\nimport type { ComponentType, Node } from 'react';\nimport { pickBy, isEmpty } from 'lodash';\n\n// utility functions\nimport { createEmptyContext, withTheme } from './HOC/withTheme';\nimport { composeTheme, addThemeId, didThemePropsChange } from '../utils/themes';\n\n// constants\nimport { IDENTIFIERS } from '.';\nimport type { ThemeContextProp } from './HOC/withTheme';\n\ntype Props = {\n  bold?: boolean,\n  center?: boolean,\n  children?: Node,\n  className?: string,\n  context: ThemeContextProp,\n  h1?: boolean,\n  h2?: boolean,\n  h3?: boolean,\n  h4?: boolean,\n  light?: boolean,\n  lowerCase?: boolean,\n  medium?: boolean,\n  regular?: boolean,\n  right?: boolean,\n  left?: boolean,\n  skin?: ComponentType<any>,\n  theme: ?Object,\n  themeId: string,\n  themeOverrides: Object,\n  thin?: boolean,\n  upperCase?: boolean\n};\n\ntype State = { composedTheme: Object };\n\nclass HeaderBase extends Component <Props, State> {\n  // define static properties\n  static displayName = 'Header';\n  static defaultProps = {\n    context: createEmptyContext(),\n    theme: null,\n    themeId: IDENTIFIERS.HEADER,\n    themeOverrides: {}\n  };\n\n  constructor(props: Props) {\n    super(props);\n\n    const { context, themeId, theme, themeOverrides } = props;\n\n    this.state = {\n      composedTheme: composeTheme(\n        addThemeId(theme || context.theme, themeId),\n        addThemeId(themeOverrides, themeId),\n        context.ROOT_THEME_API\n      )\n    };\n  }\n\n  componentWillReceiveProps(nextProps: Props) {\n    didThemePropsChange(this.props, nextProps, this.setState.bind(this));\n  }\n\n  _assembleInlineStyles = ({ center, lowerCase, left, right, upperCase }) => {\n    const inlineStyles = {};\n    const textAlign = pickBy({ center, left, right });\n    const textTransform = pickBy({ lowerCase, upperCase });\n\n    if (!isEmpty(textAlign)) {\n      inlineStyles.textAlign = Object.keys(textAlign)[0];\n    }\n\n    if (!isEmpty(textTransform)) {\n      inlineStyles.textTransform = Object.keys(textTransform)[0];\n    }\n\n    return inlineStyles;\n  };\n\n  _assembleHeaderTheme = (styleProps: Object) => {\n    const activeClasses = this._getActiveClasses(styleProps);\n    const theme = this.state.composedTheme[this.props.themeId];\n\n    return activeClasses.reduce((reducedTheme, activeClass) => {\n      if (activeClass && Object.hasOwnProperty.call(theme, activeClass)) {\n        reducedTheme[activeClass] = theme[activeClass];\n      }\n      return reducedTheme;\n    }, {});\n  };\n\n  _getActiveFont = ({ light, medium, regular, thin, bold }) => {\n    const fontProps = pickBy({ light, medium, regular, thin, bold });\n    if (isEmpty(fontProps)) { return; }\n    // returns the first active font if more than 1 is passed\n    return Object.keys(fontProps)[0];\n  };\n\n  _getActiveTheme = ({ h1, h2, h3, h4 }) => {\n    const themeProps = pickBy({ h1, h2, h3, h4 });\n    if (isEmpty(themeProps)) { return; }\n    // returns the first active theme if more than 1 is passed\n    return Object.keys(themeProps)[0];\n  };\n\n  _getActiveClasses = (styleProps: Object) => {\n    const activeClasses = ['header'];\n    const activeTheme = this._getActiveTheme(styleProps);\n    const activeFont = this._getActiveFont(styleProps);\n\n    if (activeTheme) { return [...activeClasses, activeTheme]; }\n    if (activeFont) { return [...activeClasses, activeFont]; }\n\n    return [...activeClasses, activeTheme, activeFont].filter(val => val);\n  };\n\n  render() {\n    const { children, className, skin, context, ...styleProps } = this.props;\n\n    const HeaderSkin = skin || context.skins[IDENTIFIERS.HEADER];\n    const reducedTheme = this._assembleHeaderTheme(styleProps);\n    const inlineStyles = this._assembleInlineStyles(styleProps);\n\n    return (\n      <HeaderSkin\n        className={className}\n        inlineStyles={inlineStyles}\n        theme={reducedTheme}\n      >\n        {children}\n      </HeaderSkin>\n    );\n  }\n}\n\nexport const Header = withTheme(HeaderBase);\n"]}
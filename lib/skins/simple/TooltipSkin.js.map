{"version":3,"sources":["../../../source/skins/simple/TooltipSkin.js"],"names":["TooltipSkin","props","theme","themeId","className","root","bubble","isAligningRight","alignRight","alignLeft","isBounded","nowrap","isOpeningUpward","BubbleSkin","isTransparent","arrowRelativeToTip","tip","children"],"mappings":";;;;;;;;;AAIA;;;AAGA;;;AAGA;;;AAGA;;;AAZA;;;;AAIA;;;;AAGA;;AAGA;;AAGA;;;;AAeO,IAAMA,oCAAc,SAAdA,WAAc,CAACC,KAAD,EAAkB;AAAA,MACnCC,KADmC,GAChBD,KADgB,CACnCC,KADmC;AAAA,MAC5BC,OAD4B,GAChBF,KADgB,CAC5BE,OAD4B;;AAE3C,SACE;AAAA;AAAA,iBACM,yBAAaF,KAAb,CADN;AAEE,iBAAW,0BAAW,CAACA,MAAMG,SAAP,EAAkBF,MAAMC,OAAN,EAAeE,IAAjC,CAAX;AAFb;AAIE;AAAC,oBAAD;AAAA;AACE,mBAAW,0BAAW,CACpBH,MAAMC,OAAN,EAAeG,MADK,EAEpBL,MAAMM,eAAN,GACIL,MAAMC,OAAN,EAAeK,UADnB,GAEIN,MAAMC,OAAN,EAAeM,SAJC,EAKpBR,MAAMS,SAAN,GAAkB,IAAlB,GAAyBR,MAAMC,OAAN,EAAeQ,MALpB,CAAX,CADb;AAQE,eAAOT,KART;AASE,yBAAiBD,MAAMW,eATzB;AAUE,cAAMC,sBAVR;AAWE,uBAAeZ,MAAMa,aAXvB;AAYE,4BAAoBb,MAAMc;AAZ5B;AAcGd,YAAMe;AAdT,KAJF;AAoBGf,UAAMgB;AApBT,GADF;AAwBD,CA1BM","file":"TooltipSkin.js","sourcesContent":["// @flow\nimport React from 'react';\nimport type { Node, Element } from 'react';\n\n// external libraries\nimport classnames from 'classnames';\n\n// components\nimport { Bubble } from '../../components/Bubble';\n\n// skins\nimport { BubbleSkin } from './BubbleSkin';\n\n// internal utility functions\nimport { pickDOMProps } from '../../utils/props';\n\ntype Props = {\n  children?: ?Node,\n  className?: string,\n  isAligningRight?: boolean,\n  isBounded?: boolean,\n  isOpeningUpward: boolean,\n  isTransparent: boolean,\n  arrowRelativeToTip: boolean,\n  theme: Object,\n  themeId: string,\n  tip: string | Element<any>\n};\n\nexport const TooltipSkin = (props: Props) => {\n  const { theme, themeId } = props;\n  return (\n    <span\n      {...pickDOMProps(props)}\n      className={classnames([props.className, theme[themeId].root])}\n    >\n      <Bubble\n        className={classnames([\n          theme[themeId].bubble,\n          props.isAligningRight\n            ? theme[themeId].alignRight\n            : theme[themeId].alignLeft,\n          props.isBounded ? null : theme[themeId].nowrap\n        ])}\n        theme={theme}\n        isOpeningUpward={props.isOpeningUpward}\n        skin={BubbleSkin}\n        isTransparent={props.isTransparent}\n        arrowRelativeToTip={props.arrowRelativeToTip}\n      >\n        {props.tip}\n      </Bubble>\n      {props.children}\n    </span>\n  );\n};\n"]}
{"version":3,"sources":["../../../source/skins/simple/TogglerSkin.js"],"names":["TogglerSkin","props","theme","themeId","className","root","disabled","onChange","checked","event","input","toggler","label","labelLeft","labelRight"],"mappings":";;;;;;;;;AAIA;;;AAGA;;;AANA;;;;AAIA;;;;AAGA;;;;AAaO,IAAMA,oCAAc,SAAdA,WAAc,CAACC,KAAD,EAAkB;AAAA,MACnCC,KADmC,GAChBD,KADgB,CACnCC,KADmC;AAAA,MAC5BC,OAD4B,GAChBF,KADgB,CAC5BE,OAD4B;;AAE3C,SACE;AAAA;AAAA;AACE,YAAK,cADP;AAEE,yBAFF;AAGE,iBAAW,0BAAW,CACpBF,MAAMG,SADc,EAEpBF,MAAMC,OAAN,EAAeE,IAFK,EAGpBJ,MAAMK,QAAN,GAAiBJ,MAAMC,OAAN,EAAeG,QAAhC,GAA2C,IAHvB,CAAX,CAHb;AAQE,eAAS,wBAAS;AAChB,YAAI,CAACL,MAAMK,QAAP,IAAmBL,MAAMM,QAA7B,EAAuC;AACrCN,gBAAMM,QAAN,CAAe,CAACN,MAAMO,OAAtB,EAA+BC,KAA/B;AACD;AACF;AAZH;AAcE,wDACM,yBAAaR,KAAb,CADN;AAEE,iBAAWC,MAAMC,OAAN,EAAeO,KAF5B;AAGE,oBAHF;AAIE,YAAK;AAJP,OAdF;AAoBE;AAAA;AAAA,QAAK,WAAWR,MAAMC,OAAN,EAAeQ,OAA/B;AACE;AAAA;AAAA;AACE,qBAAW,0BAAW,CACpBT,MAAMC,OAAN,EAAeS,KADK,EAEpBX,MAAMO,OAAN,GAAgBN,MAAMC,OAAN,EAAeK,OAA/B,GAAyC,IAFrB,CAAX;AADb;AAMGP,cAAMY;AANT,OADF;AASE;AAAA;AAAA;AACE,qBAAW,0BAAW,CACpBX,MAAMC,OAAN,EAAeS,KADK,EAEpBX,MAAMO,OAAN,GAAgB,IAAhB,GAAuBN,MAAMC,OAAN,EAAeK,OAFlB,CAAX;AADb;AAMGP,cAAMa;AANT;AATF;AApBF,GADF;AAyCD,CA3CM","file":"TogglerSkin.js","sourcesContent":["// @flow\nimport React from 'react';\nimport type { Element } from 'react';\n\n// external libraries\nimport classnames from 'classnames';\n\n// import utility functions\nimport { pickDOMProps } from '../../utils/props';\n\ntype Props = {\n  checked: boolean,\n  className: string,\n  disabled: boolean,\n  onChange: Function,\n  labelLeft: string | Element<any>,\n  labelRight: string | Element<any>,\n  theme: Object,\n  themeId: string\n};\n\nexport const TogglerSkin = (props: Props) => {\n  const { theme, themeId } = props;\n  return (\n    <div\n      role=\"presentation\"\n      aria-hidden\n      className={classnames([\n        props.className,\n        theme[themeId].root,\n        props.disabled ? theme[themeId].disabled : null\n      ])}\n      onClick={event => {\n        if (!props.disabled && props.onChange) {\n          props.onChange(!props.checked, event);\n        }\n      }}\n    >\n      <input\n        {...pickDOMProps(props)}\n        className={theme[themeId].input}\n        readOnly\n        type=\"checkbox\"\n      />\n      <div className={theme[themeId].toggler}>\n        <span\n          className={classnames([\n            theme[themeId].label,\n            props.checked ? theme[themeId].checked : null\n          ])}\n        >\n          {props.labelLeft}\n        </span>\n        <span\n          className={classnames([\n            theme[themeId].label,\n            props.checked ? null : theme[themeId].checked\n          ])}\n        >\n          {props.labelRight}\n        </span>\n      </div>\n    </div>\n  );\n};\n"]}
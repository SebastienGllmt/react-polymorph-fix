{"version":3,"sources":["../../../source/skins/simple/InputSkin.js"],"names":["InputSkin","props","className","disabled","label","error","inputRef","FormFieldSkin","theme","themeId","input","errored","readOnly"],"mappings":";;;;;;;;;AAIA;;;AAGA;;;AAGA;;;AAGA;;;AAZA;;;;AAIA;;;;AAGA;;AAGA;;AAGA;;;;AAmBO,IAAMA,gCAAY,SAAZA,SAAY,CAACC,KAAD;AAAA,SACvB,8BAAC,oBAAD;AACE,eAAWA,MAAMC,SADnB;AAEE,cAAUD,MAAME,QAFlB;AAGE,WAAOF,MAAMG,KAHf;AAIE,WAAOH,MAAMI,KAJf;AAKE,cAAUJ,MAAMK,QALlB;AAME,UAAMC,4BANR;AAOE,WAAON,MAAMO,KAPf;AAQE,YAAQ;AAAA,aACN;AACE,aAAKP,MAAMK;AADb,SAEM,yBAAaL,KAAb,CAFN;AAGE,mBAAW,0BAAW,CACpBA,MAAMO,KAAN,CAAYP,MAAMQ,OAAlB,EAA2BC,KADP,EAEpBT,MAAME,QAAN,GAAiBF,MAAMO,KAAN,CAAYP,MAAMQ,OAAlB,EAA2BN,QAA5C,GAAuD,IAFnC,EAGpBF,MAAMI,KAAN,GAAcJ,MAAMO,KAAN,CAAYP,MAAMQ,OAAlB,EAA2BE,OAAzC,GAAmD,IAH/B,CAAX,CAHb;AAQE,kBAAUV,MAAMW;AARlB,SADM;AAAA;AARV,IADuB;AAAA,CAAlB","file":"InputSkin.js","sourcesContent":["// @flow\nimport React from 'react';\nimport type { ElementRef, Element } from 'react';\n\n// external libraries\nimport classnames from 'classnames';\n\n// components\nimport { FormField } from '../../components/FormField';\n\n// skins\nimport { FormFieldSkin } from './FormFieldSkin';\n\n// internal utility functions\nimport { pickDOMProps } from '../../utils/props';\n\ntype Props = {\n  className?: ?string,\n  disabled?: boolean,\n  error?: string,\n  label?: string | Element<any>,\n  inputRef: ElementRef<'input'>,\n  onBlur?: Function,\n  onChange?: Function,\n  onFocus?: Function,\n  onKeyPress?: Function,\n  placeholder?: string,\n  readOnly?: boolean,\n  theme: Object,\n  themeId: string,\n  value: string\n};\n\nexport const InputSkin = (props: Props) => (\n  <FormField\n    className={props.className}\n    disabled={props.disabled}\n    label={props.label}\n    error={props.error}\n    inputRef={props.inputRef}\n    skin={FormFieldSkin}\n    theme={props.theme}\n    render={() => (\n      <input\n        ref={props.inputRef}\n        {...pickDOMProps(props)}\n        className={classnames([\n          props.theme[props.themeId].input,\n          props.disabled ? props.theme[props.themeId].disabled : null,\n          props.error ? props.theme[props.themeId].errored : null\n        ])}\n        readOnly={props.readOnly}\n      />\n    )}\n  />\n);\n"]}
{"version":3,"sources":["../../../source/skins/simple/RadioSkin.js"],"names":["RadioSkin","props","theme","themeId","className","disabled","selected","onChange","label","root","event","input","circle"],"mappings":";;;;;;;;;AAIA;;;AAGA;;;AANA;;;;AAIA;;;;AAGA;;;;AAcO,IAAMA,gCAAY,SAAZA,SAAY,CAACC,KAAD,EAAkB;AAAA,MAEvCC,KAFuC,GASrCD,KATqC,CAEvCC,KAFuC;AAAA,MAGvCC,OAHuC,GASrCF,KATqC,CAGvCE,OAHuC;AAAA,MAIvCC,SAJuC,GASrCH,KATqC,CAIvCG,SAJuC;AAAA,MAKvCC,QALuC,GASrCJ,KATqC,CAKvCI,QALuC;AAAA,MAMvCC,QANuC,GASrCL,KATqC,CAMvCK,QANuC;AAAA,MAOvCC,QAPuC,GASrCN,KATqC,CAOvCM,QAPuC;AAAA,MAQvCC,KARuC,GASrCP,KATqC,CAQvCO,KARuC;;AAUzC,SACE;AAAA;AAAA;AACE,YAAK,cADP;AAEE,yBAFF;AAGE,iBAAW,0BAAW,CACpBJ,SADoB,EAEpBF,MAAMC,OAAN,EAAeM,IAFK,EAGpBJ,WAAWH,MAAMC,OAAN,EAAeE,QAA1B,GAAqC,IAHjB,EAIpBC,WAAWJ,MAAMC,OAAN,EAAeG,QAA1B,GAAqC,IAJjB,CAAX,CAHb;AASE,eAAS,wBAAS;AAChB,YAAI,CAACD,QAAD,IAAaE,QAAjB,EAA2B;AACzBA,mBAAS,CAACD,QAAV,EAAoBI,KAApB;AACD;AACF;AAbH;AAeE,wDACM,yBAAaT,KAAb,CADN;AAEE,iBAAWC,MAAMC,OAAN,EAAeQ,KAF5B;AAGE,YAAK;AAHP,OAfF;AAoBE;AACE,iBAAW,0BAAW,CACpBT,MAAMC,OAAN,EAAeS,MADK,EAEpBN,WAAWJ,MAAMC,OAAN,EAAeG,QAA1B,GAAqC,IAFjB,CAAX;AADb,MApBF;AA0BGE,YAAQ;AAAA;AAAA,QAAO,WAAWN,MAAMC,OAAN,EAAeK,KAAjC;AAAyCA;AAAzC,KAAR,GAAkE;AA1BrE,GADF;AA8BD,CAxCM","file":"RadioSkin.js","sourcesContent":["// @flow\nimport React from 'react';\nimport type { Element } from 'react';\n\n// external libraries\nimport classnames from 'classnames';\n\n// internal utility functions\nimport { pickDOMProps } from '../../utils/props';\n\ntype Props = {\n  className: string,\n  disabled: boolean,\n  selected: boolean,\n  onBlur: Function,\n  onChange: Function,\n  onFocus: Function,\n  label: string | Element<any>,\n  theme: Object,\n  themeId: string\n};\n\nexport const RadioSkin = (props: Props) => {\n  const {\n    theme,\n    themeId,\n    className,\n    disabled,\n    selected,\n    onChange,\n    label\n  } = props;\n  return (\n    <div\n      role=\"presentation\"\n      aria-hidden\n      className={classnames([\n        className,\n        theme[themeId].root,\n        disabled ? theme[themeId].disabled : null,\n        selected ? theme[themeId].selected : null\n      ])}\n      onClick={event => {\n        if (!disabled && onChange) {\n          onChange(!selected, event);\n        }\n      }}\n    >\n      <input\n        {...pickDOMProps(props)}\n        className={theme[themeId].input}\n        type=\"radio\"\n      />\n      <div\n        className={classnames([\n          theme[themeId].circle,\n          selected ? theme[themeId].selected : null\n        ])}\n      />\n      {label ? <label className={theme[themeId].label}>{label}</label> : null}\n    </div>\n  );\n};\n"]}
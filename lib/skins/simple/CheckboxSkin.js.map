{"version":3,"sources":["../../../source/skins/simple/CheckboxSkin.js"],"names":["CheckboxSkin","props","className","theme","themeId","root","disabled","checked","onChange","event","input","check","label"],"mappings":";;;;;;;;AAGA;;;AAGA;;;AALA;;;;AAGA;;;;AAGA;;;;AAYO,IAAMA,sCAAe,SAAfA,YAAe,CAACC,KAAD;AAAA,SAC1B;AAAA;AAAA;AACE,YAAK,cADP;AAEE,yBAFF;AAGE,iBAAW,0BAAW,CACpBA,MAAMC,SADc,EAEpBD,MAAME,KAAN,CAAYF,MAAMG,OAAlB,EAA2BC,IAFP,EAGpBJ,MAAMK,QAAN,GAAiBL,MAAME,KAAN,CAAYF,MAAMG,OAAlB,EAA2BE,QAA5C,GAAuD,IAHnC,EAIpBL,MAAMM,OAAN,GAAgBN,MAAME,KAAN,CAAYF,MAAMG,OAAlB,EAA2BG,OAA3C,GAAqD,IAJjC,CAAX,CAHb;AASE,eAAS,wBAAS;AAChB,YAAI,CAACN,MAAMK,QAAP,IAAmBL,MAAMO,QAA7B,EAAuC;AACrCP,gBAAMO,QAAN,CAAe,CAACP,MAAMM,OAAtB,EAA+BE,KAA/B;AACD;AACF;AAbH;AAeE,wDACM,yBAAaR,KAAb,CADN;AAEE,iBAAWA,MAAME,KAAN,CAAYF,MAAMG,OAAlB,EAA2BM,KAFxC;AAGE,YAAK;AAHP,OAfF;AAoBE;AACE,iBAAW,0BAAW,CACpBT,MAAME,KAAN,CAAYF,MAAMG,OAAlB,EAA2BO,KADP,EAEpBV,MAAMM,OAAN,GAAgBN,MAAME,KAAN,CAAYF,MAAMG,OAAlB,EAA2BG,OAA3C,GAAqD,IAFjC,CAAX;AADb,MApBF;AA0BGN,UAAMW,KAAN,IACC;AAAA;AAAA,QAAO,WAAWX,MAAME,KAAN,CAAYF,MAAMG,OAAlB,EAA2BQ,KAA7C;AACGX,YAAMW;AADT;AA3BJ,GAD0B;AAAA,CAArB","file":"CheckboxSkin.js","sourcesContent":["// @flow\nimport React from 'react';\nimport type { Element } from 'react';\n// external libraries\nimport classnames from 'classnames';\n\n// internal utility functions\nimport { pickDOMProps } from '../../utils/props';\n\ntype Props = {\n  checked: boolean,\n  className: string,\n  disabled: boolean,\n  onChange: Function,\n  label: string | Element<any>,\n  theme: Object,\n  themeId: string\n};\n\nexport const CheckboxSkin = (props: Props) => (\n  <div\n    role=\"presentation\"\n    aria-hidden\n    className={classnames([\n      props.className,\n      props.theme[props.themeId].root,\n      props.disabled ? props.theme[props.themeId].disabled : null,\n      props.checked ? props.theme[props.themeId].checked : null\n    ])}\n    onClick={event => {\n      if (!props.disabled && props.onChange) {\n        props.onChange(!props.checked, event);\n      }\n    }}\n  >\n    <input\n      {...pickDOMProps(props)}\n      className={props.theme[props.themeId].input}\n      type=\"checkbox\"\n    />\n    <div\n      className={classnames([\n        props.theme[props.themeId].check,\n        props.checked ? props.theme[props.themeId].checked : null\n      ])}\n    />\n    {props.label && (\n      <label className={props.theme[props.themeId].label}>\n        {props.label}\n      </label>\n    )}\n  </div>\n);\n"]}
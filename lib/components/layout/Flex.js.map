{"version":3,"sources":["../../../source/components/layout/Flex.js"],"names":["FlexBase","props","context","themeId","theme","themeOverrides","state","composedTheme","ROOT_THEME_API","nextProps","setState","bind","React","Children","map","children","child","type","displayName","cloneElement","alignItems","className","justifyContent","directionProps","inlineStyles","activeClasses","_getActiveClasses","flexTheme","_assembleFlexTheme","fullTheme","renderChildren","Component","defaultProps","IDENTIFIERS","FLEX","center","column","columnReverse","row","rowReverse","activeProps","Object","keys","filter","val","reduce","reducedTheme","activeClass","hasOwnProperty","call","Flex"],"mappings":"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","file":"Flex.js","sourcesContent":["// @flow\nimport React, { Component } from 'react';\nimport type { Node } from 'react';\nimport { pickBy } from 'lodash';\n\n// components\nimport { Base } from './Base';\n\n// utilities\nimport { createEmptyContext, withTheme } from '../HOC/withTheme';\nimport { composeTheme, addThemeId, didThemePropsChange } from '../../utils/themes';\n\n// constants\nimport { IDENTIFIERS } from '..';\nimport type { ThemeContextProp } from '../HOC/withTheme';\n\ntype Props = {\n  alignItems?: string,\n  className?: string,\n  center?: boolean,\n  children?: Node,\n  column?: boolean,\n  columnReverse?: boolean,\n  context: ThemeContextProp,\n  justifyContent?: string,\n  row?: boolean,\n  rowReverse?: boolean,\n  theme: ?Object,\n  themeId: string,\n  themeOverrides: Object\n};\n\ntype State = { composedTheme: Object };\n\nclass FlexBase extends Component<Props, State> {\n  // define static properties\n  static displayName = 'Flex';\n  static defaultProps = {\n    context: createEmptyContext(),\n    theme: null,\n    themeId: IDENTIFIERS.FLEX,\n    themeOverrides: {}\n  };\n\n  constructor(props: Props) {\n    super(props);\n\n    const { context, themeId, theme, themeOverrides } = props;\n\n    this.state = {\n      composedTheme: composeTheme(\n        addThemeId(theme || context.theme, themeId),\n        addThemeId(themeOverrides, themeId),\n        context.ROOT_THEME_API\n      )\n    };\n  }\n\n  componentWillReceiveProps(nextProps: Props) {\n    didThemePropsChange(this.props, nextProps, this.setState.bind(this));\n  }\n\n  _getActiveClasses = ({ center, column, columnReverse, row, rowReverse }) => {\n    const activeClasses = ['container'];\n    const activeProps = pickBy({ center, column, columnReverse, row, rowReverse });\n    return [...activeClasses, ...Object.keys(activeProps)].filter(val => val);\n  };\n\n  _assembleFlexTheme = (activeClasses: Array<string>) => {\n    const theme = this.state.composedTheme[this.props.themeId];\n\n    return activeClasses.reduce((reducedTheme, activeClass) => {\n      if (Object.hasOwnProperty.call(theme, activeClass)) {\n        reducedTheme[activeClass] = theme[activeClass];\n      }\n      return reducedTheme;\n    }, {});\n  };\n\n  renderChildren(theme: Object) {\n    return React.Children.map(this.props.children, child => {\n      if (child.type.displayName === 'FlexItem') {\n        return React.cloneElement(child, { theme });\n      }\n      return child;\n    });\n  }\n\n  render() {\n    const { alignItems, className, justifyContent, themeId, ...directionProps } = this.props;\n\n    const inlineStyles = pickBy({ alignItems, justifyContent });\n    const activeClasses = this._getActiveClasses(directionProps);\n    const flexTheme = this._assembleFlexTheme(activeClasses);\n    const fullTheme = this.state.composedTheme[themeId];\n\n    return (\n      <Base\n        activeClasses={activeClasses}\n        className={className}\n        inlineStyles={inlineStyles}\n        stylesToAdd={flexTheme}\n      >\n        {this.renderChildren(fullTheme)}\n      </Base>\n    );\n  }\n}\n\nexport const Flex = withTheme(FlexBase);\n"]}
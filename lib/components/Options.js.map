{"version":3,"sources":["../../source/components/Options.js"],"names":["OptionsBase","props","context","themeId","theme","themeOverrides","state","composedTheme","ROOT_THEME_API","highlightedOptionIndex","isOpen","document","addEventListener","_handleKeyDown","nextProps","removeEventListener","setState","bind","skin","targetRef","onChange","optionsRef","rest","OptionsSkin","skins","IDENTIFIERS","OPTIONS","getHighlightedOptionIndex","getOptionProps","handleClickOnOption","isHighlightedOption","isSelectedOption","setHighlightedOptionIndex","Component","displayName","defaultProps","isOpeningUpward","noResultsMessage","options","resetOnClose","toggleOpen","close","onClose","currentIndex","index","length","optionIndex","isDisabledOption","option","selectedOption","isDisabled","event","onBlur","onClick","onMouseEnter","selectedOptions","_handleSelectionOnKeyDown","reverseIndex","highlightedOption","preventDefault","_handleHighlightMove","direction","lowerIndexBound","upperIndexBound","newIndex","Math","max","min","canMoveUp","canMoveDown","highlightOptionIndex","keyCode","Options"],"mappings":"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","file":"Options.js","sourcesContent":["// @flow\nimport React, { Component } from 'react';\nimport type {\n  ComponentType,\n  // $FlowFixMe\n  SyntheticKeyboardEvent,\n  // $FlowFixMe\n  SyntheticMouseEvent,\n  // $FlowFixMe\n  SyntheticEvent,\n  Element,\n  ElementRef,\n} from 'react';\n\n// internal utility functions\nimport { createEmptyContext, withTheme } from './HOC/withTheme';\nimport { composeTheme, addThemeId, didThemePropsChange } from '../utils/themes';\nimport { composeFunctions } from '../utils/props';\n\n// import constants\nimport { IDENTIFIERS } from '.';\nimport type { ThemeContextProp } from './HOC/withTheme';\n\ntype Props = {\n  className?: String,\n  context: ThemeContextProp,\n  isOpen: boolean,\n  isOpeningUpward: boolean,\n  noResults?: boolean,\n  noResultsMessage: string | Element<any>,\n  onBlur?: Function,\n  onChange?: Function,\n  onClose?: Function,\n  options: Array<any>,\n  optionRenderer?: Function,\n  optionsRef?: ElementRef<any>,\n  optionsMaxHeight?: number,\n  render?: Function,\n  resetOnClose: boolean,\n  // TODO: Why do we have two separate props for selection?\n  selectedOption?: any,\n  selectedOptions?: Array<any>,\n  skin?: ComponentType<any>,\n  targetRef?: ElementRef<*>,\n  theme: ?Object, // if passed by user, it will take precedence over this.props.context.theme\n  themeId: string,\n  themeOverrides: Object,\n  toggleMouseLocation?: Function,\n  toggleOpen?: Function\n};\n\ntype State = {\n  composedTheme: Object,\n  highlightedOptionIndex: number\n};\n\nclass OptionsBase extends Component<Props, State> {\n  // declare ref types\n  optionsElement: ?Element<any>; // TODO: Does this get used? Don't think so.\n\n  // define static properties\n  static displayName = 'Options';\n  static defaultProps = {\n    context: createEmptyContext(),\n    isOpen: false,\n    isOpeningUpward: false,\n    noResultsMessage: 'No results',\n    options: [],\n    resetOnClose: false,\n    theme: null,\n    themeId: IDENTIFIERS.OPTIONS,\n    themeOverrides: {},\n    toggleOpen() {}\n  };\n\n  constructor(props: Props) {\n    super(props);\n\n    const { context, themeId, theme, themeOverrides } = props;\n\n    this.state = {\n      composedTheme: composeTheme(\n        addThemeId(theme || context.theme, themeId),\n        addThemeId(themeOverrides, themeId),\n        context.ROOT_THEME_API\n      ),\n      highlightedOptionIndex: 0\n    };\n  }\n\n  componentDidMount() {\n    if (this.props.isOpen) {\n      document.addEventListener('keydown', this._handleKeyDown, false);\n    }\n  }\n\n  componentWillReceiveProps(nextProps: Props) {\n    if (!this.props.isOpen && nextProps.isOpen) {\n      document.addEventListener('keydown', this._handleKeyDown, false);\n    } else if (this.props.isOpen && !nextProps.isOpen) {\n      document.removeEventListener('keydown', this._handleKeyDown, false);\n    }\n    didThemePropsChange(this.props, nextProps, this.setState.bind(this));\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('keydown', this._handleKeyDown, false);\n  }\n\n  close = () => {\n    const { isOpen, onClose, resetOnClose, toggleOpen } = this.props;\n    if (isOpen && toggleOpen) toggleOpen();\n    this.setState({\n      highlightedOptionIndex: resetOnClose ? 0 : this.state.highlightedOptionIndex\n    });\n    if (onClose) onClose();\n  };\n\n  getHighlightedOptionIndex = () => {\n    // If nothing is higlighted, highlight selected option\n    // In case nothing is selected, highlight first option\n    const { options, isOpeningUpward } = this.props;\n    const currentIndex = this.state.highlightedOptionIndex;\n    let index = 0;\n\n    if (currentIndex !== null) {\n      index = currentIndex;\n    }\n\n    if (isOpeningUpward) return options.length - 1 - index;\n    return index;\n  };\n\n  setHighlightedOptionIndex = (optionIndex: number) => {\n    if (\n      !this.isHighlightedOption(optionIndex) &&\n      this.isDisabledOption(optionIndex)\n    ) {\n      this.setState({ highlightedOptionIndex: optionIndex });\n    }\n  };\n\n  isSelectedOption = (optionIndex: number) => {\n    const { options, isOpeningUpward } = this.props;\n    const index = isOpeningUpward ? options.length - 1 - optionIndex : optionIndex;\n    const option = options[index];\n    return option && this.props.selectedOption === option;\n  };\n\n  isHighlightedOption = (optionIndex: number) => this.state.highlightedOptionIndex === optionIndex;\n\n  isDisabledOption = (optionIndex: number) => {\n    const { options } = this.props;\n    const option = options[optionIndex];\n    return option && !option.isDisabled;\n  };\n\n  handleClickOnOption = (option: ?Object, event: SyntheticEvent<>) => {\n    if (option) {\n      if (option.isDisabled) return;\n      if (this.props.onChange) this.props.onChange(option, event);\n    }\n    if (this.props.onBlur) this.props.onBlur(event);\n    this.close();\n  };\n\n  // returns an object containing props, theme, and method handlers\n  // associated with rendering this.props.options, the user can call\n  // this in the body of the renderOptions function\n  getOptionProps = ({\n    onClick,\n    onMouseEnter,\n    ...rest\n  }: { onClick: Function, onMouseEnter: Function } = {}) => {\n    const { isOpen, themeId, options, selectedOptions } = this.props;\n    const { composedTheme } = this.state;\n    const {\n      isHighlightedOption,\n      isDisabledOption,\n      handleClickOnOption,\n      setHighlightedOptionIndex\n    } = this;\n\n    return {\n      options,\n      selectedOptions,\n      isOpen,\n      isHighlightedOption,\n      isDisabledOption,\n      theme: composedTheme[themeId],\n      onClick: (option: ?Object, event: SyntheticEvent<>) =>\n        // the user's custom onClick event handler is composed with\n        // the internal functionality of Options (this.handleClickOnOption)\n        composeFunctions(onClick, handleClickOnOption)(option, event),\n      onMouseEnter: (index: number, event: SyntheticMouseEvent<>) =>\n        // user's custom onMouseEnter is composed with this.setHighlightedOptionIndex\n        composeFunctions(onMouseEnter, setHighlightedOptionIndex)(index, event),\n      ...rest\n    };\n  };\n\n  // ========= PRIVATE HELPERS =========\n\n  _handleSelectionOnKeyDown = (event: SyntheticKeyboardEvent<>) => {\n    const { options } = this.props;\n    if (options.length) {\n      const { isOpeningUpward } = this.props;\n      const currentIndex = this.state.highlightedOptionIndex;\n      const reverseIndex = options.length - 1 - currentIndex;\n      const highlightedOption =\n        options[isOpeningUpward ? reverseIndex : currentIndex];\n      this.handleClickOnOption(highlightedOption, event);\n    } else {\n      event.preventDefault();\n    }\n  };\n\n  _handleHighlightMove = (currentIndex: number, direction: string) => {\n    const { options } = this.props;\n    if (options.length) {\n      const lowerIndexBound = 0;\n      const upperIndexBound = options.length - 1;\n      let newIndex = direction === 'up' ? currentIndex - 1 : currentIndex + 1;\n\n      // Make sure new index is within options bounds\n      newIndex = Math.max(lowerIndexBound, Math.min(newIndex, upperIndexBound));\n\n      if (options[newIndex].isDisabled) {\n        // Try to jump over disabled options\n        const canMoveUp = newIndex > lowerIndexBound;\n        const canMoveDown = newIndex < upperIndexBound;\n        if (\n          (direction === 'up' && canMoveUp) ||\n          (direction === 'down' && canMoveDown)\n        ) {\n          this._handleHighlightMove(newIndex, direction);\n        }\n      } else {\n        this.setHighlightedOptionIndex(newIndex);\n      }\n    }\n  };\n\n  // this needs to get passed to OptionsSkin and attached to each Option Li\n  _handleKeyDown = (event: SyntheticKeyboardEvent<>) => {\n    const highlightOptionIndex = this.state.highlightedOptionIndex;\n    switch (event.keyCode) {\n      case 9: // Tab key: selects currently highlighted option\n        event.preventDefault();\n        this._handleSelectionOnKeyDown(event);\n        break;\n      case 13: // Enter key: selects currently highlighted option\n        event.preventDefault();\n        this._handleSelectionOnKeyDown(event);\n        break;\n      case 32: // Space key: selects currently highlighted option\n        event.preventDefault();\n        this._handleSelectionOnKeyDown(event);\n        break;\n      case 27: // Escape key: closes options if open\n        this.close();\n        break;\n      case 38: // Up Arrow key: moves highlighted selection 'up' 1 index\n        event.preventDefault(); // prevent caret move\n        this._handleHighlightMove(highlightOptionIndex, 'up');\n        break;\n      case 40: // Down Arrow key: moves highlighted selection 'down' 1 index\n        event.preventDefault(); // prevent caret move\n        this._handleHighlightMove(highlightOptionIndex, 'down');\n        break;\n      default:\n        this.props.resetOnClose && this.setHighlightedOptionIndex(0);\n    }\n  };\n\n  render() {\n    // destructuring props ensures only the \"...rest\" get passed down\n    const {\n      skin,\n      targetRef,\n      theme,\n      themeOverrides,\n      onChange,\n      context,\n      optionsRef,\n      isOpen,\n      ...rest\n    } = this.props;\n\n    const { composedTheme, highlightedOptionIndex } = this.state;\n\n    const OptionsSkin = skin || context.skins[IDENTIFIERS.OPTIONS];\n\n    return (\n      <OptionsSkin\n        getHighlightedOptionIndex={this.getHighlightedOptionIndex}\n        getOptionProps={this.getOptionProps}\n        handleClickOnOption={this.handleClickOnOption}\n        highlightedOptionIndex={highlightedOptionIndex}\n        isHighlightedOption={this.isHighlightedOption}\n        isOpen={isOpen}\n        isSelectedOption={this.isSelectedOption}\n        optionsRef={optionsRef}\n        setHighlightedOptionIndex={this.setHighlightedOptionIndex}\n        targetRef={targetRef}\n        theme={composedTheme}\n        {...rest}\n      />\n    );\n  }\n}\n\nexport const Options = withTheme(OptionsBase);\n"]}
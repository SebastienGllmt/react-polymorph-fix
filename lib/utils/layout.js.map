{"version":3,"sources":["../../source/utils/layout.js"],"names":["composeBaseStyles","baseStyles","stylesToAdd","activeClasses","length","composedBase","forEach","Object","hasOwnProperty","call","className","base","formatTemplateAreas","areas","reduce","template","row","index"],"mappings":";;;;;;;;AAEA;AACA;AACA;AACO,IAAMA,gDAAoB,SAApBA,iBAAoB,CAC/BC,UAD+B,EAI5B;AAAA,MAFHC,WAEG,uEAFmB,EAEnB;AAAA,MADHC,aACG;;AACH,MAAI,CAACA,aAAD,IAAkB,CAACA,cAAcC,MAArC,EAA6C;AAAE,WAAOH,UAAP;AAAoB;AACnE,MAAMI,4BAAoBJ,UAApB,CAAN;;AAEAE,gBAAcG,OAAd,CAAsB,qBAAa;AACjC,QAAIC,OAAOC,cAAP,CAAsBC,IAAtB,CAA2BP,WAA3B,EAAwCQ,SAAxC,KAAsDR,YAAYQ,SAAZ,CAA1D,EAAkF;AAChFL,mBAAaM,IAAb,UAAyBT,YAAYQ,SAAZ,CAAzB;AACD;AACF,GAJD;;AAMA,SAAOL,YAAP;AACD,CAfM;;AAiBA,IAAMO,oDAAsB,SAAtBA,mBAAsB,CAACC,KAAD,EAA0B;AAC3D,MAAI,CAACA,KAAD,IAAU,CAACA,MAAMT,MAArB,EAA6B;AAAE;AAAS;;AAExC,SAAOS,MAAMC,MAAN,CAAa,UAACC,QAAD,EAAWC,GAAX,EAAgBC,KAAhB,EAA0B;AAC5C,QAAI,CAACA,KAAL,EAAY;AAAE,oBAAWD,GAAX;AAAoB;AAClC,WAAUD,QAAV,WAAuBC,GAAvB;AACD,GAHM,EAGJ,EAHI,CAAP;AAID,CAPM","file":"layout.js","sourcesContent":["// @flow\n\n// the baseStyles obj will be composed with the stylesToAdd obj\n// activeClasses is an array of the classes within stylesToAdd\n// that should be added to baseStyles\nexport const composeBaseStyles = (\n  baseStyles: Object,\n  stylesToAdd: Object = {},\n  activeClasses: Array<string>\n) => {\n  if (!activeClasses || !activeClasses.length) { return baseStyles; }\n  const composedBase = { ...baseStyles };\n\n  activeClasses.forEach(className => {\n    if (Object.hasOwnProperty.call(stylesToAdd, className) && stylesToAdd[className]) {\n      composedBase.base += ` ${stylesToAdd[className]}`;\n    }\n  });\n\n  return composedBase;\n};\n\nexport const formatTemplateAreas = (areas: Array<string>) => {\n  if (!areas || !areas.length) { return; }\n\n  return areas.reduce((template, row, index) => {\n    if (!index) { return `'${row}'`; }\n    return `${template} '${row}'`;\n  }, '');\n};\n"]}
{"version":3,"sources":["../../source/components/Input.js"],"names":["InputBase","props","onChange","event","disabled","_processValue","target","value","focus","inputElement","current","_setError","error","setError","setState","context","themeId","theme","themeOverrides","state","composedTheme","ROOT_THEME_API","autoFocus","nextProps","bind","_enforceStringValue","_enforceMaxLength","_enforceMinLength","call","Error","maxLength","isTooLong","length","substring","minLength","isTooShort","skin","rest","InputSkin","skins","IDENTIFIERS","INPUT","Component","displayName","defaultProps","readOnly","Input"],"mappings":"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","file":"Input.js","sourcesContent":["// @flow\nimport React, { Component } from 'react';\n// $FlowFixMe\nimport type { ComponentType, Element, SyntheticInputEvent } from 'react';\n\n// external libraries\nimport createRef from 'create-react-ref/lib/createRef';\nimport { isString, flow } from 'lodash';\n\n// utilities\nimport { createEmptyContext, withTheme } from './HOC/withTheme';\nimport { composeTheme, addThemeId, didThemePropsChange } from '../utils/themes';\n\n// constants\nimport { IDENTIFIERS } from '.';\nimport type { ThemeContextProp } from './HOC/withTheme';\n\ntype Props = {\n  autoFocus: boolean,\n  className?: ?string,\n  context: ThemeContextProp,\n  disabled?: boolean,\n  error: string | Element<any>,\n  label?: string | Element<any>,\n  maxLength?: number,\n  minLength?: number,\n  onBlur?: Function,\n  onChange?: Function,\n  onFocus?: Function,\n  onKeyPress?: Function,\n  placeholder?: string,\n  readOnly: boolean,\n  setError?: Function,\n  skin?: ComponentType<any>,\n  theme: ?Object, // will take precedence over theme in context if passed\n  themeId: string,\n  themeOverrides: Object,\n  value: string\n};\n\ntype State = {\n  error: string,\n  composedTheme: Object\n};\n\nclass InputBase extends Component<Props, State> {\n  // declare ref types\n  inputElement: Element<'input'>;\n\n  // define static properties\n  static displayName = 'Input';\n  static defaultProps = {\n    autoFocus: false,\n    context: createEmptyContext(),\n    error: '',\n    readOnly: false,\n    theme: null,\n    themeId: IDENTIFIERS.INPUT,\n    themeOverrides: {},\n    value: ''\n  };\n\n  constructor(props: Props) {\n    super(props);\n\n    // define ref\n    this.inputElement = createRef();\n\n    const { context, themeId, theme, themeOverrides } = props;\n\n    this.state = {\n      composedTheme: composeTheme(\n        addThemeId(theme || context.theme, themeId),\n        addThemeId(themeOverrides, themeId),\n        context.ROOT_THEME_API\n      ),\n      error: ''\n    };\n  }\n\n  componentDidMount() {\n    if (this.props.autoFocus) this.focus();\n  }\n\n  componentWillReceiveProps(nextProps: Props) {\n    didThemePropsChange(this.props, nextProps, this.setState.bind(this));\n  }\n\n  onChange = (event: SyntheticInputEvent<Element<'input'>>) => {\n    const { onChange, disabled } = this.props;\n    if (disabled) return;\n\n    if (onChange) onChange(this._processValue(event.target.value), event);\n  };\n\n  focus = () => {\n    const { inputElement } = this;\n    if (!inputElement.current) return;\n    inputElement.current.focus();\n  };\n\n  _setError = (error: string) => {\n    const { setError } = this.props;\n\n    // checks for setError func from FormField component\n    // if this Input instance is being used within the render function\n    // of a FormField instance, the error field within FormField's local state\n    // will be set\n    if (setError) setError(error);\n    this.setState({ error });\n  };\n\n  _processValue(value: string) {\n    return flow([\n      this._enforceStringValue,\n      this._enforceMaxLength,\n      this._enforceMinLength\n    ]).call(this, value);\n  }\n\n  _enforceStringValue(value) {\n    if (!isString(value)) {\n      throw new Error('Values passed to Input::onChange must be strings');\n    }\n    return value;\n  }\n\n  _enforceMaxLength(value: string) {\n    const { maxLength } = this.props;\n    const isTooLong = maxLength != null && value.length > maxLength;\n    return isTooLong ? value.substring(0, maxLength) : value;\n  }\n\n  _enforceMinLength(value: string) {\n    const { minLength } = this.props;\n    const isTooShort = minLength != null && value.length < minLength;\n\n    if (isTooShort) {\n      this._setError('Please enter a valid input');\n    } else if (this.state.error !== '') {\n      this._setError('');\n    }\n\n    return value;\n  }\n\n  render() {\n    // destructuring props ensures only the \"...rest\" get passed down\n    const {\n      skin,\n      context,\n      theme,\n      themeOverrides,\n      onChange,\n      error,\n      maxLength,\n      minLength,\n      setError,\n      autoFocus,\n      ...rest\n    } = this.props;\n\n    const InputSkin = skin || context.skins[IDENTIFIERS.INPUT];\n\n    return (\n      <InputSkin\n        error={error || this.state.error}\n        onChange={this.onChange}\n        inputRef={this.inputElement}\n        theme={this.state.composedTheme}\n        {...rest}\n      />\n    );\n  }\n}\n\nexport const Input = withTheme(InputBase);\n"]}
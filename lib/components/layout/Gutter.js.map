{"version":3,"sources":["../../../source/components/layout/Gutter.js"],"names":["GutterBase","props","context","themeId","theme","themeOverrides","state","composedTheme","ROOT_THEME_API","nextProps","setState","bind","children","className","inlinePadding","padding","Component","displayName","defaultProps","IDENTIFIERS","GUTTER","Gutter"],"mappings":";;;;;;;;;AACA;;;;AAIA;;AAGA;;AACA;;AACA;;AAGA;;;;;;;;;;AATA;;;AAGA;;;AAKA;;;IAgBMA,U;;;AACJ;AASA,sBAAYC,KAAZ,EAA0B;AAAA;;AAAA,wHAClBA,KADkB;;AAAA,QAGhBC,OAHgB,GAG4BD,KAH5B,CAGhBC,OAHgB;AAAA,QAGPC,OAHO,GAG4BF,KAH5B,CAGPE,OAHO;AAAA,QAGEC,KAHF,GAG4BH,KAH5B,CAGEG,KAHF;AAAA,QAGSC,cAHT,GAG4BJ,KAH5B,CAGSI,cAHT;;;AAKxB,UAAKC,KAAL,GAAa;AACXC,qBAAe,0BACb,wBAAWH,SAASF,QAAQE,KAA5B,EAAmCD,OAAnC,CADa,EAEb,wBAAWE,cAAX,EAA2BF,OAA3B,CAFa,EAGbD,QAAQM,cAHK;AADJ,KAAb;AALwB;AAYzB;;;;8CAEyBC,S,EAAkB;AAC1C,uCAAoB,KAAKR,KAAzB,EAAgCQ,SAAhC,EAA2C,KAAKC,QAAL,CAAcC,IAAd,CAAmB,IAAnB,CAA3C;AACD;;;6BAEQ;AAAA,mBAC0D,KAAKV,KAD/D;AAAA,UACCW,QADD,UACCA,QADD;AAAA,UACWC,SADX,UACWA,SADX;AAAA,UACsBV,OADtB,UACsBA,OADtB;AAAA,UACwCW,aADxC,UAC+BC,OAD/B;;AAEP,UAAMA,UAAUD,gBAAgB,wBAAWA,aAAX,CAAhB,GAA4C,IAA5D;AACA,UAAMV,QAAQ,KAAKE,KAAL,CAAWC,aAAX,CAAyBJ,OAAzB,CAAd;;AAEA,aACE;AAAC,kBAAD;AAAA;AACE,yBAAe,CAAC,QAAD,CADjB;AAEE,qBAAWU,SAFb;AAGE,wBAAc,EAAEE,gBAAF,EAHhB;AAIE,uBAAaX;AAJf;AAMGQ;AANH,OADF;AAUD;;;;EA3CsBI,gB;;AAAnBhB,U,CAEGiB,W,GAAc,Q;AAFjBjB,U,CAGGkB,Y,GAAe;AACpBhB,WAAS,oCADW;AAEpBE,SAAO,IAFa;AAGpBD,WAASgB,cAAYC,MAHD;AAIpBf,kBAAgB;AAJI,C;AA2CjB,IAAMgB,0BAAS,0BAAUrB,UAAV,CAAf","file":"Gutter.js","sourcesContent":["// @flow\nimport React, { Component } from 'react';\nimport type { Node } from 'react';\n\n// components\nimport { Base } from './Base';\n\n// utility functions\nimport { createEmptyContext, withTheme } from '../HOC/withTheme';\nimport { composeTheme, addThemeId, didThemePropsChange } from '../../utils/themes';\nimport { numberToPx } from '../../utils/props';\n\n// constants\nimport { IDENTIFIERS } from '..';\nimport type { ThemeContextProp } from '../HOC/withTheme';\n\ntype Props = {\n  className?: string,\n  children?: Node,\n  context: ThemeContextProp,\n  padding?: string | number,\n  theme: ?Object,\n  themeId: string,\n  themeOverrides: Object\n};\n\ntype State = { composedTheme: Object };\n\nclass GutterBase extends Component<Props, State> {\n  // define static properties\n  static displayName = 'Gutter';\n  static defaultProps = {\n    context: createEmptyContext(),\n    theme: null,\n    themeId: IDENTIFIERS.GUTTER,\n    themeOverrides: {}\n  };\n\n  constructor(props: Props) {\n    super(props);\n\n    const { context, themeId, theme, themeOverrides } = props;\n\n    this.state = {\n      composedTheme: composeTheme(\n        addThemeId(theme || context.theme, themeId),\n        addThemeId(themeOverrides, themeId),\n        context.ROOT_THEME_API\n      )\n    };\n  }\n\n  componentWillReceiveProps(nextProps: Props) {\n    didThemePropsChange(this.props, nextProps, this.setState.bind(this));\n  }\n\n  render() {\n    const { children, className, themeId, padding: inlinePadding } = this.props;\n    const padding = inlinePadding ? numberToPx(inlinePadding) : null;\n    const theme = this.state.composedTheme[themeId];\n\n    return (\n      <Base\n        activeClasses={['gutter']}\n        className={className}\n        inlineStyles={{ padding }}\n        stylesToAdd={theme}\n      >\n        {children}\n      </Base>\n    );\n  }\n}\n\nexport const Gutter = withTheme(GutterBase);\n"]}
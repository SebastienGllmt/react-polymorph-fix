{"version":3,"sources":["../../../source/components/layout/Base.js"],"names":["Base","props","activeClasses","stylesToAdd","state","composedStyles","baseStyles","className","children","inlineStyles","base","Component","displayName","defaultProps"],"mappings":";;;;;;;;;AACA;;;;AAEA;;;;AAGA;;;;AAGA;;;;;;;;;;AAJA;;;AAGA;;;IAeaA,I,WAAAA,I;;;AACX;AAOA,gBAAYC,KAAZ,EAA0B;AAAA;;AAAA,4GAClBA,KADkB;;AAAA,QAGhBC,aAHgB,GAGeD,KAHf,CAGhBC,aAHgB;AAAA,QAGDC,WAHC,GAGeF,KAHf,CAGDE,WAHC;;;AAKxB,UAAKC,KAAL,GAAa;AACXC,sBAAgB,+BAAkBC,cAAlB,EAA8BH,WAA9B,EAA2CD,aAA3C;AADL,KAAb;AALwB;AAQzB;;;;6BAEQ;AAAA,mBACuC,KAAKD,KAD5C;AAAA,UACCM,SADD,UACCA,SADD;AAAA,UACYC,QADZ,UACYA,QADZ;AAAA,UACsBC,YADtB,UACsBA,YADtB;AAAA,UAECJ,cAFD,GAEoB,KAAKD,KAFzB,CAECC,cAFD;;;AAIP,aACE;AAAA;AAAA,UAAK,OAAOI,YAAZ,EAA0B,WAAW,0BAAW,CAACF,SAAD,EAAYF,eAAeK,IAA3B,CAAX,CAArC;AACGF;AADH,OADF;AAKD;;;;EA3BuBG,gB;;AAAbX,I,CAEJY,W,GAAc,M;AAFVZ,I,CAGJa,Y,GAAe;AACpBJ,gBAAc,EADM;AAEpBN,eAAa;AAFO,C","file":"Base.js","sourcesContent":["// @flow\nimport React, { Component } from 'react';\nimport type { Node } from 'react';\nimport classnames from 'classnames';\n\n// styles\nimport baseStyles from '../../themes/helpers/Base.scss';\n\n// utilities\nimport { composeBaseStyles } from '../../utils/layout';\n\ntype Props = {\n  activeClasses: Array<*>,\n  children?: ?Node,\n  className?: string,\n  inlineStyles: Object,\n  stylesToAdd?: Object\n};\n\ntype State = {\n  composedStyles: Object\n};\n\nexport class Base extends Component<Props, State> {\n  // define static properties\n  static displayName = 'Base';\n  static defaultProps = {\n    inlineStyles: {},\n    stylesToAdd: {}\n  };\n\n  constructor(props: Props) {\n    super(props);\n\n    const { activeClasses, stylesToAdd } = props;\n\n    this.state = {\n      composedStyles: composeBaseStyles(baseStyles, stylesToAdd, activeClasses)\n    };\n  }\n\n  render() {\n    const { className, children, inlineStyles } = this.props;\n    const { composedStyles } = this.state;\n\n    return (\n      <div style={inlineStyles} className={classnames([className, composedStyles.base])}>\n        {children}\n      </div>\n    );\n  }\n}\n"]}
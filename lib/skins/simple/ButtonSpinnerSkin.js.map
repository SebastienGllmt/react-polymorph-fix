{"version":3,"sources":["../../../source/skins/simple/ButtonSpinnerSkin.js"],"names":["ButtonSpinnerSkin","props","className","disabled","label","loading","themeId","buttonTheme","theme","spinnerTheme","IDENTIFIERS","LOADING_SPINNER","renderLoadingSpinner","LoadingSpinnerSkin","root"],"mappings":";;;;;;;;;AAIA;;;AAGA;;;AAIA;;;AAGA;;;AAbA;;;;AAIA;;;;AAGA;;AACA;;AAGA;;AAGA;;;;AAWO,IAAMA,gDAAoB,SAApBA,iBAAoB,CAACC,KAAD,EAAkB;AAAA,MACzCC,SADyC,GACQD,KADR,CACzCC,SADyC;AAAA,MAC9BC,QAD8B,GACQF,KADR,CAC9BE,QAD8B;AAAA,MACpBC,KADoB,GACQH,KADR,CACpBG,KADoB;AAAA,MACbC,OADa,GACQJ,KADR,CACbI,OADa;AAAA,MACJC,OADI,GACQL,KADR,CACJK,OADI;;AAEjD,MAAMC,cAAcN,MAAMO,KAAN,CAAYF,OAAZ,CAApB;AACA,MAAMG,eAAeR,MAAMO,KAAN,CAAYE,wBAAYC,eAAxB,CAArB;;AAEA,MAAMC,uBAAuB,SAAvBA,oBAAuB;AAAA,WAC3B,8BAAC,8BAAD;AACE,YAAMC,sCADR;AAEE,aAAOJ;AAFT,MAD2B;AAAA,GAA7B;;AAOA,SACE;AAAA;AAAA,iBACM,yBAAaR,KAAb,CADN;AAEE,iBAAW,0BAAW,CACpBC,SADoB,EAEpBK,YAAYO,IAFQ,EAGpBX,WAAWI,YAAYJ,QAAvB,GAAkC,IAHd,CAAX;AAFb;AAQGE,cAAUO,sBAAV,GAAmCR;AARtC,GADF;AAYD,CAxBM","file":"ButtonSpinnerSkin.js","sourcesContent":["// @flow\nimport React from 'react';\nimport type { Element } from 'react';\n\n// external libraries\nimport classnames from 'classnames';\n\n// internal components & skins\nimport { LoadingSpinner } from '../../components/LoadingSpinner';\nimport { LoadingSpinnerSkin } from './LoadingSpinnerSkin';\n\n// internal utility functions\nimport { pickDOMProps } from '../../utils/props';\n\n// constants\nimport { IDENTIFIERS } from '../../components';\n\ntype Props = {\n  className: string,\n  disabled: boolean,\n  label: string | Element<any>,\n  loading: boolean,\n  theme: Object,\n  themeId: string\n};\n\nexport const ButtonSpinnerSkin = (props: Props) => {\n  const { className, disabled, label, loading, themeId } = props;\n  const buttonTheme = props.theme[themeId];\n  const spinnerTheme = props.theme[IDENTIFIERS.LOADING_SPINNER];\n\n  const renderLoadingSpinner = () => (\n    <LoadingSpinner\n      skin={LoadingSpinnerSkin}\n      theme={spinnerTheme}\n    />\n  );\n\n  return (\n    <button\n      {...pickDOMProps(props)}\n      className={classnames([\n        className,\n        buttonTheme.root,\n        disabled ? buttonTheme.disabled : null\n      ])}\n    >\n      {loading ? renderLoadingSpinner() : label}\n    </button>\n  );\n};\n"]}